xml.txt 0.0.2                         UTF-8                     dh:2015-12-10

        <https://github.com/orcmid/DocInterop>
               /DocInterop/ODF/substrate/xml/xml.txt>

                    OPEN DOCUMENT FORMAT XML SUBSTRATE
                    ==================================

          DOCUMENT INTEROPERABILITY ASSESSMENT/ASSURANCE BOOTSTRAP

    XML Documents are employed in several ways as components of ODF documents.

    XML Documents provide a medium for components in several ways:

     * As single XML file ODF documents with root element <office:document>
       (and appropriate namespace binding for the "office" prefix), valid
       according to the specified schema and be name-space well-formed and
       conform to the xml-id specification [ODF1.2-1:2.2.1(C,D.1,D.2).

     * As specific content files of an OpenDocument package, having many
       of the same qualities as single XML file OpenDcument documents.

     * Similarly, as specific content files for subdocuments in an
       OpenDocument package.

     * As special-purpose files in OpenDocument packages for specification
       of a manifest, digital signature, and RDF metadata via XML documents.

    There are no other defined cases of XML documents as components of ODF
    documents.  It is conceivable that a package might contain additional
    XML documents for separate purpose.  There is no explicit provision in
    the ODF 1.0/1.1/1.2 specifications.

    For the substrate case, only the single XML file ODF document can be
    presented as a standalone XML file for simple substrate assessment.  This
    form is very suitable for testing purposes, although not all OpenDocument
    Consumers accept the single XML file case.

    The other specified cases of XML documents as OpenDocument document compo-
    nents will be assessed as part of the Zip substrate assessment.  The
    package substrate will have some parallel cases with the ones here to
    ensure that the more-common in-package use of ODF XML address test cases
    paralleling those introduced here.


INITIAL CONTENT

          xml.txt This note about what appears in the subfolder
                  /DocInterop/ODF/substrate/xml/

         sandbox/ folder for experimentation with simple XML cases without
                  figuring out how to build them into test sets just yet.



 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                       Copyright 2015 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

TODO

 * Establish a no-brainer case of single XML file OpenDocument Text
   document that should be acceptable to all consumers that accept the single-
   file case.

 * Create variations that exercise different aspects of XML all within valid
   single-file documents.

 * Figure out a simple organization of these actual files, their assessment
   procedures, relevant test assertions, and demonstration of assessment
   results.

 * Tests need to link to the test assertions they are part of.  There can be
   test assertions that are also for various profile levels.  For example,
   something like an OpenOffice.org profile, an RCT-level profile, etc.

 * Put material about the substrate-level XML test assertions here at this
   level.

 * Determine what other XML content can be in files beyond the normal stuff,
   especially since OpenOffice appears to have more than content.xml,
   styles.xml, meta.xml, and settings.xml.  This needs to be exercised in
   the package substrate too, perhaps.

 * The complicated layering of abstractions in OpenDocument package document
   files need to be addressed, especially with respect to the manifest,
   digital signatures, encryption, and the RDF business.  Remember to account
   for that in how substrate and higher levels are navigated.

 * Need to figure out how standalone MathML works in this picture, if at all.
   Perhaps it is a separate case.

 * Can an internal DTD be used to place application constraints on a document?

 * Character set encodings need to be explored, along with some of the Unicode
   characters that have functions similar to basic ASCII controls for white
   space.

 * The rendering of Unicode text is an important matter with regard to the
   changes that happen in versions of Unicode and also how there may be
   interactions with language codes (xml:lang too) and layout rules.  This
   may need to be a matter for the OASIS ODF TC, or at least a profile
   agreement.  This will also figure in the handling of special areas,
   something that ODF used and did not signal in any particular way.  So
   font mappings figure into this too.  This may be more than substrate,
   depending how it figures into XML parsing.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.2 2015-12-10-07:30 Expand TODO to consider Unicode versions and rendering
       of codes.
 0.0.1 2015-08-14-14:27 Add sandbox/ sub-folder and more TODO
 0.0.0 2015-08-12-18:50 Establish initial xml folder note and start
       a list of TODO items/notes.

                         *** end of xml.txt ***